name: DigitalOcean Node.js Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout backend repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3️⃣ Install backend dependencies
      - name: Install backend dependencies
        run: npm ci

      # 4️⃣ Generate Prisma client
      - name: Generate Prisma client
        run: npx prisma generate

      # 5️⃣ Run Prisma migrations
      - name: Run Prisma migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      # 6️⃣ Build backend
      - name: Build backend
        run: npm run build

      # 7️⃣ Build frontend locally in workflow
      - name: Build frontend
        run: |
          cd ../esdelivery-app   # adjust path if needed
          npm ci
          npm run build

      # 8️⃣ Deploy to DigitalOcean droplet via SSH
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: 22
          script: |
            # ----- Backend -----
            cd /var/www/delivery-backend
            git pull origin main
            npm ci
            npm run build
            pm2 restart all

            # ----- Frontend -----
            mkdir -p /var/www/html
            rm -rf /var/www/html/*
          # Copy frontend dist folder from workflow to droplet
      - name: Upload frontend dist
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: 22
          source: "../esdelivery-app/dist/*"
          target: "/var/www/html/"
